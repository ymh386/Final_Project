<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.spring.app.attendance.AttendanceDAO">
  	
  	<!-- 체크아웃하지 않은 출석 기록 조회 -->
  	
  	<select id="selectUncheckedOutAttendances" parameterType="map" resultType="AttendanceVO">
  	 SELECT
	  	 ATTENDANCE_ID,
	  	 USERNAME,
	  	 CHECKIN_TIME,
	  	 CHECKOUT_TIME,
	  	 STATUS
  	 FROM ATTENDANCE
  	   	WHERE CHECKIN_TIME BETWEEN #{startDate} AND #{endDate}
  	 AND CHECKOUT_TIME IS NULL
  	 AND STATUS != '결근'
  	</select>
  	
  	<update id="updateToAutoAbsent" parameterType="map">
  	
  	UPDATE ATTENDANCE
  	SET
  		STATUS = #{status},
  		CHECKOUT_TIME = #{autoCheckOutTime}
  		WHERE ATTENDANCE_ID IN
  <foreach collection="attendanceIds" item="id" open="(" separator="," close=")">
            #{id}
  </foreach>
  
  	</update>
  	
  	<select id="findNameByUsername" parameterType="string" resultType="string">
  SELECT NAME
  FROM USER
  WHERE USERNAME = #{username}
</select>
  	
  	
    <!-- 1) username+attendance_date로 오늘 기록 조회 -->
    <select id="selectByUserAndDate" parameterType="map" resultType="AttendanceVO">
        SELECT *
        FROM ATTENDANCE
        WHERE USERNAME = #{username}
          AND ATTENDANCE_DATE=#{attendanceDate}
    </select>
  	
  	
  	
  	  <!-- 1) 출근 기록 삽입 -->
  <insert id="insertCheckIn" parameterType="AttendanceVO" useGeneratedKeys= "true"
        keyProperty="attendanceId"
        keyColumn="ATTENDANCE_ID">
    INSERT INTO ATTENDANCE
      (ATTENDANCE_DATE, CHECKIN_TIME, STATUS, RECORDED_AT, USERNAME)
    VALUES
      (#{attendanceDate}, #{checkinTime},#{status}, NOW(), #{username})
  </insert>
  	
  	
  	  <!-- 2) 퇴근 시간 업데이트 -->
  <update id="updateCheckOut" parameterType="AttendanceVO">
    UPDATE ATTENDANCE
    SET CHECKOUT_TIME = #{checkoutTime},
        STATUS = #{status}
    WHERE ATTENDANCE_ID =#{attendanceId}
  </update>
  	
  	
  	    <select id="selectById" parameterType="long" resultType="AttendanceVO">
        SELECT *
          FROM ATTENDANCE
         WHERE ATTENDANCE_ID = #{attendanceId}
    </select>
  	
  	
  	
 <select id="selectByUser" resultType="AttendanceVO" parameterType="string">
    SELECT * FROM ATTENDANCE
    WHERE USERNAME = #{username}
    ORDER BY ATTENDANCE_DATE DESC, CHECKIN_TIME
  </select>

<select id="selectByDate" resultType="map" parameterType="java.time.LocalDate">
  SELECT 
    A.ATTENDANCE_ID       AS attendanceId,
    A.USERNAME             AS username,
    U.NAME                 AS name,
    A.CHECKIN_TIME         AS checkinTime,
    A.CHECKOUT_TIME        AS checkoutTime,
    A.STATUS               AS status,
    A.ATTENDANCE_DATE      AS attendanceDate
  FROM ATTENDANCE A
  JOIN USER U ON A.USERNAME = U.USERNAME
  WHERE A.ATTENDANCE_DATE = #{attendanceDate}
  ORDER BY A.CHECKIN_TIME
</select>
  
  
  

  <select id="selectAll" resultType="AttendanceVO">
    SELECT * FROM ATTENDANCE
    ORDER BY ATTENDANCE_DATE DESC, CHECKIN_TIME
  </select>
  
  <!-- 전체 직원 월별 통계 -->
  <select id="getAllMonthlyStats" resultType="AttendanceStatVO">
  SELECT MONTH(ATTENDANCE_DATE) AS month,
         COUNT(*) AS total,
         SUM(CASE WHEN STATUS = '퇴근' THEN 1 ELSE 0 END) AS present,
         SUM(CASE WHEN STATUS = '지각' THEN 1 ELSE 0 END) AS late,
         SUM(CASE WHEN STATUS = '결근' THEN 1 ELSE 0 END) AS absent
    FROM ATTENDANCE
   WHERE YEAR(ATTENDANCE_DATE) = #{year}
   GROUP BY MONTH(ATTENDANCE_DATE)
   ORDER BY month
</select>

 <!-- 특정 부서 월별 통계 -->
	<select id="getDeptMonthlyStats" resultType="AttendanceStatVO">
	  SELECT MONTH(A.ATTENDANCE_DATE) AS month,
	         COUNT(*) AS total,
	         SUM(CASE WHEN A.STATUS = '퇴근' THEN 1 ELSE 0 END) AS present,
	         SUM(CASE WHEN A.STATUS = '지각' THEN 1 ELSE 0 END) AS late,
	         SUM(CASE WHEN A.STATUS = '결근' THEN 1 ELSE 0 END) AS absent
	    FROM ATTENDANCE A
	    JOIN USER U ON A.USERNAME = U.USERNAME
	   WHERE YEAR(A.ATTENDANCE_DATE) = #{year}
	     AND U.DEPARTMENT_ID = #{departmentId}
	   GROUP BY MONTH(A.ATTENDANCE_DATE)
	   ORDER BY month
	</select>
	
	<!-- 특정 사용자 월별 통계 -->
	<select id="getUserMonthlyStats" resultType="AttendanceStatVO">
	  SELECT MONTH(ATTENDANCE_DATE) AS month,
	         COUNT(*) AS total,
	         SUM(CASE WHEN STATUS = '퇴근' THEN 1 ELSE 0 END) AS present,
	         SUM(CASE WHEN STATUS = '지각' THEN 1 ELSE 0 END) AS late,
	         SUM(CASE WHEN STATUS = '결근' THEN 1 ELSE 0 END) AS absent
	    FROM ATTENDANCE
	   WHERE YEAR(ATTENDANCE_DATE) = #{year}
	     AND USERNAME = #{username}
	   GROUP BY MONTH(ATTENDANCE_DATE)
	   ORDER BY month
	</select>
	
	<!-- 특정 사용자 이번달 근태 통계 -->
	<select id="getCurrentMonthStats" resultType="AttendanceStatVO">
	  SELECT 
	         COUNT(*) AS total,
	         SUM(CASE WHEN STATUS = '퇴근' THEN 1 ELSE 0 END) AS present,
	         SUM(CASE WHEN STATUS = '지각' THEN 1 ELSE 0 END) AS late,
	         SUM(CASE WHEN STATUS = '결근' THEN 1 ELSE 0 END) AS absent
	    FROM ATTENDANCE
	   WHERE USERNAME = #{username}
	     AND YEAR(ATTENDANCE_DATE) = #{year}
	     AND MONTH(ATTENDANCE_DATE) = #{month}
	</select>
  	
  	<!-- 관리자가 근태 수정 가능 -->
  	
  	<update id="updateAttendance" parameterType="AttendanceVO">
  	UPDATE ATTENDANCE
  	SET
  	CHECKIN_TIME  = #{checkinTime},
    CHECKOUT_TIME = #{checkoutTime},
    UPDATE_AT     = NOW(),
    UPDATE_REASON = #{updateReason}
  WHERE ATTENDANCE_ID = #{attendanceId}
  	
  	
  	</update>
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  </mapper>
